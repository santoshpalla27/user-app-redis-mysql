version: '3.8'

services:
  # Frontend React Application
  frontend:
    build: ./frontend
    container_name: user-app-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network
    environment:
      - REACT_APP_API_URL=http://54.91.32.209:5000
      - WDS_SOCKET_PORT=0
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Backend Node.js Application
  backend:
    build: ./backend
    container_name: user-app-backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      
      # AWS RDS MySQL Configuration
      - RDS_ENDPOINT=database-1.ckv8e4y0md17.us-east-1.rds.amazonaws.com
      - RDS_MASTER_USERNAME=admin
      - RDS_MASTER_PASSWORD=password
      - RDS_DATABASE=userdb
      - RDS_PORT=3306
      - RDS_SSL=true
      
      # AWS ElastiCache Redis Configuration
      - REDIS_CLUSTER_ENDPOINT=clustercfg.redis.anp3iz.use1.cache.amazonaws.com
      - REDIS_PORT=6379
      - REDIS_USE_TLS=true
      - REDIS_PASSWORD=password
      
    networks:
      - app-network
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s


networks:
  app-network:
    driver: bridge
